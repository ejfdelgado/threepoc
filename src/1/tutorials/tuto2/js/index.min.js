(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TestComponent = exports.TestComponentClass = void 0;

var _ModuloPagina = require("../../../../../js/front/page/ModuloPagina.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

class TestComponentClass {
  constructor($scope, $compile) {
    this.$compile = $compile;
    this.$scope = $scope;
  }

  editPage() {
    _ModuloPagina.ModuloPagina.editPage({
      angular: {
        scope: this.$scope,
        compile: this.$compile,
        ctrl: this
      }
    });
  }

  savePage() {
    return _asyncToGenerator(function* () {
      console.log("salvar?");
    })();
  }

  $onInit() {
    this.message = "I'm master!";
  }

  $onChanges(changesObj) {// Replaces the $watch()
  }

  $onPostLink() {// When the component DOM has been compiled attach you eventHandler.
  }

  $postLink() {//
  }

}

exports.TestComponentClass = TestComponentClass;
var TestComponent = {
  bindings: {
    page: "<"
  },
  templateUrl: "/1/tutorials/tuto2/js/components/TestComponent.html",
  controller: ["$scope", "$compile", TestComponentClass]
};
exports.TestComponent = TestComponent;

},{"../../../../../js/front/page/ModuloPagina.mjs":14}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppModule = exports.MessageModule = void 0;

var _TestComponent = require("./components/TestComponent.mjs");

var _ModuloIntMark = require("../../../../js/front/firebase/ModuloIntMark.mjs");

var _ModuloPagina = require("../../../../js/front/page/ModuloPagina.mjs");

var _ModuloQR = require("../../../../js/front/firebase/ModuloQR.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var MessageModule = angular.module("message", ["ui.router"]).component("testComponent", _TestComponent.TestComponent).config(["$stateProvider", "$urlRouterProvider", ($stateProvider, $urlRouterProvider) => {
  $stateProvider.state("/", {
    url: "/",
    component: "testComponent",
    bindings: {
      page: "page"
    },
    resolve: {
      page: function () {
        var _page = _asyncToGenerator(function* () {
          var general = yield _ModuloIntMark.ModuloIntMark.getDiferidoIntMark({
            useFirebase: false,
            masterLoged: false
          });

          _ModuloQR.ModuloQR.showQR();

          if ([null, undefined].indexOf(general.principal) >= 0) {
            return {
              general: general,
              page: undefined
            };
          } else {
            return {
              general: general,
              page: (yield _ModuloPagina.ModuloPagina.leer()).valor
            };
          }
        });

        function page() {
          return _page.apply(this, arguments);
        }

        return page;
      }()
    }
  });
  $urlRouterProvider.otherwise("/");
}]).name;
exports.MessageModule = MessageModule;
var AppModule = angular.module("app", [MessageModule, "ui.router"]).name;
exports.AppModule = AppModule;
angular.bootstrap(document, ["app"]);

},{"../../../../js/front/firebase/ModuloIntMark.mjs":11,"../../../../js/front/firebase/ModuloQR.mjs":12,"../../../../js/front/page/ModuloPagina.mjs":14,"./components/TestComponent.mjs":1}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Constants = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Constants {}

exports.Constants = Constants;

_defineProperty(Constants, "SITE_NAME", "País TV");

_defineProperty(Constants, "ROOT_FOLDER", "/1/trans");

_defineProperty(Constants, "PROJECT_ID", "proyeccion-colombia1");

_defineProperty(Constants, "ADMINISTRADORES", ["google.com/edgar.jose.fernando.delgado@gmail.com"]);

_defineProperty(Constants, "DEFAULT_BUCKET", Constants.PROJECT_ID + ".appspot.com");

_defineProperty(Constants, "GOOGLE_PUBLIC", "https://storage.googleapis.com/");

_defineProperty(Constants, "PUBLIC_BUCKET_PREFIX", Constants.GOOGLE_PUBLIC + Constants.PROJECT_ID + ".appspot.com/public");

_defineProperty(Constants, "firebase", {
  databaseURL: "https://" + Constants.PROJECT_ID + ".firebaseio.com"
});

_defineProperty(Constants, "VALID_BUCKET_KEYS", function () {
  return [// Como si fuera simplemente la llave ^public/usr/
  /^(public\/usr\/[^?]+)/, // Como si fuera una ruta local al api /storage/read?name=public/usr/
  /\/storage\/read\?name=(public\/usr\/[^?]+)$/, // Como si fuera https://storage.googleapis.com/[^/]+/public/usr/
  new RegExp(Constants.GOOGLE_PUBLIC + "[^/]+/(public/usr/[^?]+)")];
});

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Deferred = void 0;

class Deferred {
  constructor() {
    this.promise = new Promise((resolve, reject) => {
      this.resolve = resolve;
      this.reject = reject;
    });
  }

}

exports.Deferred = Deferred;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Utiles = void 0;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

class Utiles {
  static list2Text(list) {
    if (list instanceof Array) {
      return list.join(" ");
    } else {
      return "";
    }
  }

  static text2List(text) {
    var list = text.split(/\s+/); // Se quitan duplicados y vacíos

    list = list.filter(function (item, pos, self) {
      return item.trim().length > 0 && self.indexOf(item) == pos;
    });
    return list;
  }
  /**
   * Rotarna el path de modo: "https://paistv.appspot.com/1/scan3d?algo=5"
   */


  static getReferer() {
    var pathNameFromBase = document.baseURI.replace(location.origin, "");
    var pathNameFromLocation = location.pathname;

    if (pathNameFromLocation.length > pathNameFromBase.length) {
      return location.origin + pathNameFromLocation + location.search + location.hash;
    }

    return location.origin + pathNameFromBase + location.search + location.hash;
  }

  static htmlEntities(str) {
    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
  }

  static loadJson(url) {
    return _asyncToGenerator(function* () {
      return new Promise((resolve, reject) => {
        $.getJSON(url, function () {}).done(function (data) {
          resolve(data);
        }).fail(function () {
          reject(new Error("Error leyendo ".concat(url)));
        });
      });
    })();
  }

  static getCurrentTimeNumber() {
    var ahora = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
    //AAAAMMDD.HHmmss
    return ahora.getFullYear() * 10000 + (ahora.getMonth() + 1) * 100 + ahora.getDay() + ahora.getHours() / 100 + ahora.getMinutes() / 10000 + ahora.getSeconds() / 1000000 + ahora.getMilliseconds() / 1000000000;
  }

  static promiseState(p) {
    var t = {};
    return Promise.race([p, t]).then(v => v === t ? "pending" : "resolved", () => "rejected");
  }

  static extend(a, b) {
    Object.assign(a, b);
  }

}

exports.Utiles = Utiles;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Utilidades = void 0;

var _Constants = require("./Constants.mjs");

class Utilidades {
  static isSlave() {
    return /(sl=si)/.exec(location.search) != null;
  } //A la lista x le resta la lista a


  static diff(x, a) {
    if (!(a instanceof Array)) {
      return x;
    }

    return x.filter(function (i) {
      return a.indexOf(i) === -1;
    });
  }

  static removeDoubles(list) {
    return list.filter(function (item, pos, self) {
      return self.indexOf(item) == pos;
    });
  }

  static remove(lista, valor) {
    var indice = lista.indexOf(valor);

    if (indice >= 0) {
      lista.splice(indice, 1);
    }
  }

  static getBucketKey(tempKey) {
    var EXPRESIONES = _Constants.Constants.VALID_BUCKET_KEYS();

    var key = null;

    for (var i = 0; i < EXPRESIONES.length; i++) {
      if (key == null) {
        var partes = EXPRESIONES[i].exec(tempKey);

        if (partes != null) {
          key = partes[1];
        }
      } else {
        break;
      }
    }

    return key;
  }

  static trimSlashes(text) {
    return text.replace(/^[\/\\]+/g, "").replace(/[\/\\]+$/g, "");
  }

  static interpolate(text, o) {
    return text.replace(/[$]{([^{}]*)}/g, function (a, b) {
      var r = o[b];
      return typeof r === "string" || typeof r === "number" ? r : a;
    });
  }

  static llenarYpersistir(nuevo, valoresNuevos) {
    var listanegra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
    var puntos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var attrViejos = Object.keys(nuevo);
    var llavesNuevas = Object.keys(valoresNuevos);

    for (var i = 0; i < llavesNuevas.length; i++) {
      var key = llavesNuevas[i];
      var value = valoresNuevos[key];

      if (puntos) {
        key = key.replace(/[.]/g, "/");
      }

      if (!listanegra.includes(key)) {
        nuevo[key] = value;
      }
    } // Calculo los atributos que se deben borrar


    var restantes = attrViejos.filter(n => !listanegra.includes(n));
    restantes = restantes.filter(n => !llavesNuevas.includes(n));

    for (var _i = 0; _i < restantes.length; _i++) {
      var _key = restantes[_i];

      if (puntos) {
        _key = _key.replace(/[.]/g, "/");
      }

      delete nuevo[_key];
    }

    return nuevo;
  }

  static leerHeader(myrequest, lista) {
    for (var i = 0; i < lista.length; i++) {
      var a = lista[i];
      var val = myrequest.header(a);

      if (["", null, undefined].indexOf(val) < 0) {
        return val;
      }

      return null;
    }
  }

  static leerNumero(s) {
    var predef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (typeof s == "string" || typeof s == "number") {
      var ans = parseInt(s);

      if (!isNaN(ans)) {
        return ans;
      }
    }

    return predef;
  }

  static generateQueryParams(attributes) {
    var keys = Object.keys(attributes);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var val = attributes[key];

      if ([null, undefined].indexOf(val) >= 0) {
        delete attributes[key];
      }
    }

    return new URLSearchParams(attributes).toString();
  }

  static getQueryParams(fullUrl) {
    var params = {};

    if (typeof fullUrl != "string") {
      if (typeof location != "undefined") {
        fullUrl = location.href;
      } else {
        return params;
      }
    }

    var onlyQuery = fullUrl.replace(/^[^?]+[?]/, "").replace(/[#].*$/, "");
    var patron = /([^=&]+)=([^=&]+)/g;
    var match;

    do {
      match = patron.exec(onlyQuery);

      if (match != null) {
        var llave = match[1];
        var valor = match[2];
        params[llave] = decodeURI(valor);
      }
    } while (match != null);

    return params;
  }

  static hayValor(obj) {
    return obj !== null && obj !== undefined;
  }

  static esFuncion(functionToCheck) {
    return functionToCheck instanceof Function;
  }

  static esLista(value) {
    return value instanceof Array;
  }

  static esObjeto(obj) {
    return obj !== null && obj !== undefined && typeof obj == "object";
  }

  static is_null(valor) {
    return valor === null || typeof valor === "undefined";
  }

  static esNumero(dato) {
    return typeof dato == "number" || /^\d+$/.test(dato);
  }

  static esFlotante(dato) {
    return typeof dato == "number" || /^\s*\d+([\.,]\d*)?\s*$/.test(dato);
  }

  static darRutasObjeto(objOr, filtroObjetoAgregar, estructura) {
    var includeBase = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
    var ans = [];

    var iterarDentroFun = function iterarDentroFun(valor, llaveSiguiente) {
      if (typeof filtroObjetoAgregar == "function") {
        return filtroObjetoAgregar(valor, llaveSiguiente);
      }

      return true;
    };

    var funcionRecursiva = function funcionRecursiva(obj, rutaActual, estructura) {
      if (Utilidades.esObjeto(obj)) {
        var llaves = Object.keys(obj);

        for (var i = 0; i < llaves.length; i++) {
          var llave = llaves[i];

          if (llave == "$$hashKey") {
            continue;
          }

          var valor = obj[llave];
          var llaveSiguiente = null;

          if (rutaActual === null) {
            llaveSiguiente = llave;
          } else {
            llaveSiguiente = rutaActual + "." + llave;
          }

          if (iterarDentroFun(valor, llaveSiguiente) && ans.indexOf(llaveSiguiente) < 0) {
            if (includeBase || llaveSiguiente.indexOf(".") >= 0) {
              ans.push(llaveSiguiente);
            }
          }

          funcionRecursiva(valor, llaveSiguiente, estructura);
        }

        if (estructura === true && rutaActual !== null && ans.indexOf(rutaActual) < 0 && iterarDentroFun(null, rutaActual)) {
          if (includeBase || rutaActual.indexOf(".") >= 0) {
            ans.push(rutaActual);
          }
        }
      } else {
        if (rutaActual !== null) {
          if (iterarDentroFun(null, rutaActual) && ans.indexOf(rutaActual) < 0) {
            if (includeBase || rutaActual.indexOf(".") >= 0) {
              ans.push(rutaActual);
            }
          }
        }
      }
    };

    funcionRecursiva(objOr, null, estructura);
    return ans;
  }

  static leerObj(obj, nombres, predef, evitarInvocar, soportarNull) {
    if (!Utilidades.hayValor(nombres) || !Utilidades.esObjeto(obj)) {
      return predef;
    }

    var partes;

    try {
      if (typeof nombres == "number") {
        partes = [nombres];
      } else {
        partes = nombres.split(".");
      }
    } catch (e) {
      console.log("Error", e, "nombres", nombres);
      return predef;
    }

    var objetoActual = obj;

    for (var i = 0; i < partes.length; i++) {
      var llave = partes[i];

      if (Utilidades.esNumero(llave) && Utilidades.esLista(objetoActual)) {
        llave = parseInt(llave);
      }

      objetoActual = objetoActual[llave];

      if (i != partes.length - 1 && !Utilidades.esObjeto(objetoActual)) {
        return predef;
      }
    }

    if (!Utilidades.hayValor(objetoActual)) {
      if (soportarNull === true && objetoActual === null) {
        return objetoActual;
      }

      return predef;
    }

    if (evitarInvocar !== true && Utilidades.esFuncion(objetoActual)) {
      return objetoActual();
    }

    return objetoActual;
  }
  /*
    0,1 = tipo básico que sí se persiste
    2,3 = tipo estructural {} o []
    null = otro
    */


  static darTipoEstructura(dato) {
    if (dato === undefined) {
      return null;
    }

    if (dato === null) {
      return 0;
    }

    var proto = Object.getPrototypeOf(dato);

    if ([String.prototype, Number.prototype, Boolean.prototype].indexOf(proto) >= 0) {
      return 1;
    }

    if (proto === Object.prototype) {
      return 2;
    }

    if (proto === Array.prototype) {
      return 3;
    }

    return null;
  }

  static asignarObj(miObjeto, nombres, valor) {
    var debug = true; //if (debug) {console.log('Asignando ', nombres, 'con', valor);}

    var partes = nombres.split(".");
    var objetoActual = miObjeto;
    var esUltimo;
    var esObj;
    var anterior = null;
    var llaveAnterior = null;
    var esNumeroLlave;

    for (var i = 0; i < partes.length; i++) {
      var llave = partes[i];
      esNumeroLlave = Utilidades.esNumero(llave);

      if (esNumeroLlave) {
        llave = parseInt(llave);
      }

      esUltimo = i == partes.length - 1;
      esObj = typeof objetoActual == "object"; //if (debug) {console.log('i=',i, 'llave=',llave,'esUltimo=',esUltimo,'esObj=',esObj);}

      if (!esObj && anterior != null && valor !== undefined) {
        //if (debug) {console.log('Forza a que sea objeto');}
        //Forza a que sea un objeto
        var nuevo;

        if (esNumeroLlave) {
          nuevo = [];
        } else {
          nuevo = {};
        }

        anterior[llaveAnterior] = nuevo;
        objetoActual = nuevo;
        esObj = true;
      }

      if (esObj) {
        if (esUltimo) {
          //Última iteración
          if (Utilidades.esLista(objetoActual[llave]) && Utilidades.esLista(valor) && objetoActual[llave] !== valor) {
            objetoActual[llave].splice(0, objetoActual[llave].length);

            for (var nk = 0; nk < valor.length; nk++) {
              objetoActual[llave].push(valor[nk]);
            }
          } else {
            if (valor === undefined) {
              delete objetoActual[llave];
            } else {
              objetoActual[llave] = valor;
            }
          }
        } else {
          var tipoObj = typeof objetoActual;

          if (tipoObj != "object" || Object.keys(objetoActual).indexOf("" + llave) < 0 || objetoActual[llave] === null || tipoObj == "undefined") {
            //Si la llave no existe en el objeto actual o si es nulo o indefinido
            //if (debug) {console.log('Creando siguiente objeto');}
            if (Utilidades.esNumero(partes[i + 1])) {
              objetoActual[llave] = [];
            } else {
              objetoActual[llave] = {};
            }
          }

          anterior = objetoActual;
          llaveAnterior = llave;
          objetoActual = objetoActual[llave];
        }
      } else {
        //if (debug) {console.log('Aborta en ', llave);}
        break;
      }
    }
  }

}

exports.Utilidades = Utilidades;

},{"./Constants.mjs":3}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloActividad = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ModuloActividad {
  static actualizar(opciones) {
    if ($(".loading_micodigo_core_lib").length == 0) {
      $("body").append($(ModuloActividad.TEMPLATE_DIV));
    }

    var settings = $.extend(true, {}, {
      clase_img: "panal",
      contenido: ""
    }, opciones);
    var tam = ModuloActividad.encolados.length;

    if (tam > 0) {
      var imagen = $(".loading_micodigo_core_lib .imagen_micodigo_core_lib");
      imagen.attr("class", "imagen_micodigo_core_lib");
      imagen.addClass(settings["clase_img"]);
      $(".loading_micodigo_core_lib .contenido_micodigo_core_lib").html(settings["contenido"]);
      $(".loading_micodigo_core_lib").removeClass("invisible");
    } else {
      $(".loading_micodigo_core_lib").addClass("invisible");
    }
  }

  static on(opciones) {
    //Debe devolver un diferido
    var diferido = $.Deferred();
    var settings = $.extend(true, {}, {}, opciones);
    ModuloActividad.encolados.push(diferido);
    diferido.promise().always(function () {
      var indice = ModuloActividad.encolados.indexOf(diferido);

      if (indice >= 0) {
        ModuloActividad.encolados.splice(indice, 1);
      }

      ModuloActividad.actualizar(settings);
    });
    ModuloActividad.actualizar(settings);

    if (typeof settings["timeout"] == "number") {
      setTimeout(function () {
        diferido.resolve();
      }, settings["timeout"]);
    }

    return diferido;
  }

}

exports.ModuloActividad = ModuloActividad;

_defineProperty(ModuloActividad, "TEMPLATE_DIV", '<div class="loading_micodigo_core_lib invisible">\
    <div class="imagen_micodigo_core_lib"></div>\
    <div class="contenido_micodigo_core_lib">\
        <div></div>\
    </div>\
  </div>');

_defineProperty(ModuloActividad, "encolados", []);

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloHtml = void 0;

var _Utilidades = require("../../common/Utilidades.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ModuloHtml {
  static getHtml(url) {
    var _arguments = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};
      opciones = Object.assign({
        avoidCache: false
      }, opciones);
      return new Promise( /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(function* (resolve, reject) {
          var val = null;

          if (opciones.avoidCache !== true) {
            val = ModuloHtml.CACHE[url];

            if (typeof val == "string") {
              resolve(val);
              return;
            }
          }

          val = yield fetch(url, {
            method: "GET"
          }).then(res => res.text());
          ModuloHtml.CACHE[url] = val;
          resolve(val);
        });

        return function (_x, _x2) {
          return _ref.apply(this, arguments);
        };
      }());
    })();
  }

  static modelToHtml(scope, element) {
    var _loop = function _loop(i) {
      var attribute = ModuloHtml.ATTRIBUTES[i];
      element.find("[".concat(attribute, "]")).each(function (i, elem) {
        var elemJ = $(elem);
        var ruta = elemJ.attr(attribute);

        var valor = _Utilidades.Utilidades.leerObj(scope, ruta, "");

        if (attribute == "ng-model") {
          elemJ.val(valor);
        } else if (attribute == "ng-data") {
          elemJ.text(valor);
        } else if (attribute == "ng-src") {
          elemJ.attr("src", valor);
        }
      });
    };

    for (var i = 0; i < ModuloHtml.ATTRIBUTES.length; i++) {
      _loop(i);
    }
  }

  static htmlToModel(element) {
    var scope = {};

    var _loop2 = function _loop2(i) {
      var attribute = ModuloHtml.ATTRIBUTES[i];
      element.find("[".concat(attribute, "]")).each(function (i, elem) {
        var elemJ = $(elem);
        var ruta = elemJ.attr(attribute);
        var valor = null;

        if (attribute == "ng-model") {
          valor = elemJ.val();
        } else if (attribute == "ng-data") {
          valor = elemJ.text();
        } else if (attribute == "ng-src") {
          valor = elemJ.attr("src");
        }

        _Utilidades.Utilidades.asignarObj(scope, ruta, valor);
      });
    };

    for (var i = 0; i < ModuloHtml.ATTRIBUTES.length; i++) {
      _loop2(i);
    }

    return scope;
  }

}

exports.ModuloHtml = ModuloHtml;

_defineProperty(ModuloHtml, "ATTRIBUTES", ["ng-src", "ng-model", "ng-data"]);

_defineProperty(ModuloHtml, "CACHE", {});

},{"../../common/Utilidades.mjs":6}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloModales = void 0;

var _ModuloHtml = require("./ModuloHtml.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

class ModuloModales {
  static alert() {
    var _arguments = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};
      return new Promise( /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(function* (resolve) {
          opciones = Object.assign({
            title: "Alerta",
            message: "Mensaje",
            useHtml: false,
            onClose: () => {
              resolve();
            },
            buttons: [{
              text: "Aceptar",
              class: "btn btn-primary",
              action: function () {
                var _action = _asyncToGenerator(function* (close) {
                  close();
                });

                function action(_x2) {
                  return _action.apply(this, arguments);
                }

                return action;
              }()
            }]
          }, opciones);
          yield ModuloModales.basic(opciones);
        });

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
    })();
  }

  static confirm() {
    var _arguments2 = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};
      return new Promise( /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator(function* (resolve) {
          opciones = Object.assign({
            title: "¿Está seguro?",
            message: "Por favor confirme.",
            useHtml: false,
            onClose: () => {
              resolve(false);
            },
            buttons: [{
              text: "Aceptar",
              class: "btn btn-primary",
              action: function () {
                var _action2 = _asyncToGenerator(function* (close) {
                  resolve(true);
                  close();
                });

                function action(_x4) {
                  return _action2.apply(this, arguments);
                }

                return action;
              }()
            }, {
              text: "Cancelar",
              class: "btn btn-secondary",
              action: function () {
                var _action3 = _asyncToGenerator(function* (close) {
                  resolve(false);
                  close();
                });

                function action(_x5) {
                  return _action3.apply(this, arguments);
                }

                return action;
              }()
            }]
          }, opciones);
          yield ModuloModales.basic(opciones);
        });

        return function (_x3) {
          return _ref2.apply(this, arguments);
        };
      }());
    })();
  }

  static basic() {
    var _arguments3 = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {};
      opciones = Object.assign({
        urlTemplate: "/js/front/common/html/basic.html",
        title: "",
        message: "",
        useHtml: false,
        buttons: [],
        forceActions: false,
        centered: false,
        size: "",
        // lg sm
        beforeShow: null,
        angular: null
      }, opciones);
      var html = yield _ModuloHtml.ModuloHtml.getHtml(opciones.urlTemplate);
      var elem = $(html);
      $("body").append(elem);
      var refFooter = elem.find(".modal-footer");

      var closeFunction = () => {
        elem.modal("hide");
      };

      opciones.buttons.forEach(function (button) {
        var buttonElem = $("<button type=\"button\" class=\"".concat(button.class, "\"></button>"));
        buttonElem.text(button.text);
        refFooter.append(buttonElem);

        if (typeof button.action == "function") {
          buttonElem.on("click", function () {
            button.action(closeFunction, elem);
          });
        }
      });

      if (opciones.forceActions) {
        opciones.keyboard = false;
        opciones.backdrop = "static";
        elem.find('button[data-dismiss="modal"]').remove();
      }

      var elemDialog = elem.find(".modal-dialog");

      if (opciones.centered) {
        elemDialog.addClass("modal-dialog-centered");
      }

      if (opciones.size == "lg") {
        elemDialog.addClass("modal-lg");
      } else if (opciones.size == "sm") {
        elemDialog.addClass("modal-sm");
      }

      if (opciones.useHtml) {
        elem.find(".modal-title").html(opciones.title);
        elem.find(".modal-body > p").html(opciones.message);
      } else {
        elem.find(".modal-title").text(opciones.title);
        elem.find(".modal-body > p").text(opciones.message);
      }

      if (typeof opciones.beforeShow == "function") {
        yield opciones.beforeShow(elem);
      }

      if ([null, undefined].indexOf(opciones.angular) < 0) {
        var scope = opciones.angular.scope;
        var compile = opciones.angular.compile;
        compile(elem)(scope);
      }

      elem.modal(opciones);
      elem.on("hidden.bs.modal", function (e) {
        elem.remove();

        if (typeof opciones.onClose == "function") {
          opciones.onClose();
        }
      });
    })();
  }

}

exports.ModuloModales = ModuloModales;

},{"./ModuloHtml.mjs":8}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MiSeguridad = void 0;

var _Utiles = require("../../common/Utiles.mjs");

var _ModuloActividad = require("../common/ModuloActividad.mjs");

var _ModuloPagina = require("../page/ModuloPagina.mjs");

var _Utilidades = require("../../common/Utilidades.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class MiSeguridad {
  static hayUsuario() {
    return _asyncToGenerator(function* () {
      try {
        yield MiSeguridad.diferidoFirebase;
        return true;
      } catch (err) {
        return false;
      }
    })();
  }

  static obligarLogin() {
    return _asyncToGenerator(function* () {
      var hay = yield MiSeguridad.hayUsuario();

      if (!hay) {
        MiSeguridad.showLogin();
      } else {
        var metadatos = yield MiSeguridad.diferidoDatos;
        return metadatos;
      }
    })();
  }

  static buscarUsuario(forzar) {
    return _asyncToGenerator(function* () {
      if (forzar) {
        return yield MiSeguridad.obligarLogin();
      } else {
        var hay = yield MiSeguridad.hayUsuario();

        if (hay) {
          return yield MiSeguridad.diferidoDatos;
        }
      }

      return;
    })();
  }

  static recargarDatos(usuario) {
    if (MiSeguridad.diferidoDatos == null) {
      MiSeguridad.diferidoDatos = new Promise((resolve, reject) => {
        MiSeguridad.datosLocales.usr = usuario;
        MiSeguridad.initApp().then(() => {
          var actividadIdentidad = _ModuloActividad.ModuloActividad.on();

          var queryParams = _ModuloPagina.ModuloPagina.getCurrentPageValues();

          var url = new URL("".concat(location.origin, "/adm/identidad"));
          url.search = _Utilidades.Utilidades.generateQueryParams(queryParams);
          var promesaIdentidad = fetch(url, {
            method: "GET"
          });
          promesaIdentidad.catch(() => {
            actividadIdentidad.resolve();
            MiSeguridad.borrarDatos();
            reject(MiSeguridad.datosLocales);
          });
          promesaIdentidad = promesaIdentidad.then(datos => datos.json());
          promesaIdentidad.then(msg => {
            Object.assign(MiSeguridad.datosLocales, msg);
            resolve(MiSeguridad.datosLocales);
            actividadIdentidad.resolve();
          });
        }, () => {
          console.log("Error insertando token");
        });
      });
    }

    return MiSeguridad.diferidoDatos;
  }

  static darToken() {
    return new Promise((resolve, reject) => {
      if (MiSeguridad.diferidoFirebase == null) {
        resolve(null);
      }

      MiSeguridad.diferidoFirebase.then(usr => {
        if (usr != null && usr != undefined) {
          usr.getIdToken().then(function (accessToken) {
            resolve(accessToken);
          }, function () {
            resolve(null);
          });
        } else {
          reject(null);
        }
      }, () => {
        reject(null);
      });
    });
  }

  static showLogin() {
    var contenedor = $("#firebaseui-auth-container");
    contenedor.removeClass("invisible");

    if (contenedor.find(".presentacion").length == 0) {
      var quiensoy = $('<div class="presentacion"></div>');
      var titulo = $('meta[name="og:title"]').attr("content");
      var descripcion = $('meta[name="og:description"]').attr("content");
      var urlimagen = $('meta[name="og:background_image"]').attr("content");
      var h1Tit = $("<h1></h1>");
      h1Tit.text(titulo);
      quiensoy.append(h1Tit);
      var pDesc = $("<p></p>");
      pDesc.text(descripcion);
      quiensoy.append(pDesc);
      quiensoy.css({
        "background-image": "url(".concat(urlimagen, ")")
      });
      var fondoquiensoy = $('<div class="fondopresentacion"></div>');
      fondoquiensoy.append(quiensoy);
      contenedor.prepend(fondoquiensoy);
    }

    if (contenedor.find(".presentacioncancel").length == 0) {
      var micancelar = $('<div class="presentacioncancel"></div>');
      MiSeguridad.leerTextos().then(function (TEXTOS) {
        micancelar.html(TEXTOS["miseguridad.cancelar"]);
        micancelar.on("click", function () {
          contenedor.addClass("invisible");
        });
        contenedor.append(micancelar);
      });
    }
  }

  static leerTextos() {
    return _asyncToGenerator(function* () {
      return {
        "miseguridad.cancelar": "Cancelar",
        "miseguridad.ingresar": "Ingresar",
        "miseguridad.salir": "Salir"
      };
    })();
  }

  static borrarDatos() {
    MiSeguridad.datosLocales = {
      id: null,
      usr: null,
      roles: []
    };
  }

  static modoOffline() {
    var elementoAccion = $("#sign-in");
    var elementoUsuario = $("#firebase_usr_id");
    elementoUsuario.text("");
    MiSeguridad.borrarDatos();
    MiSeguridad.leerTextos().then(function (TEXTOS) {
      elementoAccion.html(TEXTOS["miseguridad.ingresar"]);
      elementoAccion.off("click");
      elementoAccion.on("click", MiSeguridad.showLogin);
    });
  }

  static modoOnline(user) {
    var elementoAccion = $("#sign-in");
    var elementoUsuario = $("#firebase_usr_id");
    var provider = user.providerData[0];
    var texto = provider.displayName + " @ " + provider.providerId;
    elementoUsuario.text(texto);
    MiSeguridad.leerTextos().then(function (TEXTOS) {
      elementoAccion.html(TEXTOS["miseguridad.salir"]);
      elementoAccion.off("click");
      elementoAccion.on("click", MiSeguridad.salir);
    });
  }

  static initApp() {
    if (MiSeguridad.diferidoFirebase != null) {
      return MiSeguridad.diferidoFirebase;
    }

    MiSeguridad.diferidoFirebase = new Promise((resolve, reject) => {
      firebase.auth().onAuthStateChanged(function (user) {
        var estadoActualPromise = _Utiles.Utiles.promiseState(MiSeguridad.diferidoFirebase);

        estadoActualPromise.then(estadoActual => {
          if (["resolved", "rejected"].indexOf(estadoActual) >= 0) {
            location.reload();
            return;
          }

          if (user !== null) {
            user.getIdToken().then(function (token) {
              resolve(user);
            });
          } else {
            // User is signed out.
            // Initialize the FirebaseUI Widget using Firebase.
            var ui = new firebaseui.auth.AuthUI(firebase.auth()); // Show the Firebase login button.

            ui.start("#firebaseui-auth-container", MiSeguridad.getUiConfig());
            reject();
          }
        });
      }, function (error) {
        reject(error);
      });
    });
    MiSeguridad.diferidoFirebase.then(function (user) {
      MiSeguridad.recargarDatos(user).then(function () {
        MiSeguridad.modoOnline(user);
      }, MiSeguridad.modoOffline);
    }, MiSeguridad.modoOffline);
    return MiSeguridad.diferidoFirebase;
  }

  static firebaseConf() {
    if (MiSeguridad.diferidoConf == null) {
      // Puede que lo quiera leer desde algún lugar del back
      var actividadSomeData = _ModuloActividad.ModuloActividad.on();

      var promesaSomeData = fetch("/adm/somedata", {
        method: "GET"
      });
      MiSeguridad.diferidoConf = new Promise((resolve, reject) => {
        promesaSomeData.then(response => {
          response.json().then(msg => {
            actividadSomeData.resolve();
            resolve({
              config: msg
            });
          }, () => {
            actividadSomeData.resolve();
          });
        }, () => {
          actividadSomeData.resolve();
        });
      });
    }

    return MiSeguridad.diferidoConf;
  }

  static inicializar() {
    if (MiSeguridad.diferidoApp == null) {
      MiSeguridad.diferidoApp = new Promise((resolve, reject) => {
        MiSeguridad.firebaseConf().then(function (datos) {
          //La configuración
          Object.assign(MiSeguridad.config, datos.config); //El cliente
          //Initialize Firebase

          var defaultApp = firebase.initializeApp(MiSeguridad.config);
          resolve({
            app: defaultApp,
            config: MiSeguridad.config
          });
          MiSeguridad.initApp();
        }, function (err) {});
      });
    }

    return MiSeguridad.diferidoApp;
  }

  static thenApp() {
    return _asyncToGenerator(function* () {
      return MiSeguridad.diferidoApp;
    })();
  }

  static getRecaptchaMode() {
    // Quick way of checking query params in the fragment. If we add more config
    // we might want to actually parse the fragment as a query string.
    return location.hash.indexOf("recaptcha=invisible") !== -1 ? "invisible" : "normal";
  }

}

exports.MiSeguridad = MiSeguridad;

_defineProperty(MiSeguridad, "diferidoConf", null);

_defineProperty(MiSeguridad, "diferidoApp", null);

_defineProperty(MiSeguridad, "config", {});

_defineProperty(MiSeguridad, "diferidoFirebase", null);

_defineProperty(MiSeguridad, "datosLocales", {});

_defineProperty(MiSeguridad, "diferidoDatos", null);

_defineProperty(MiSeguridad, "salir", function () {
  var actividad = _ModuloActividad.ModuloActividad.on();

  var promesa = firebase.auth().signOut();
  promesa.then(function () {
    MiSeguridad.borrarDatos(); //$.publish('miseguridad.logout');

    location.reload();
  }, function (error) {
    actividad.resolve();
  });
  return promesa;
});

_defineProperty(MiSeguridad, "getUiConfig", function () {
  return {
    callbacks: {
      // Called when the user has been successfully signed in.
      signInSuccess: function signInSuccess(user, credential, redirectUrl) {
        MiSeguridad.recargarDatos(user).then(function () {
          //$.publish('miseguridad.login', user);
          location.reload();
        }); // Do not redirect.

        return false;
      }
    },
    // Opens IDP Providers sign-in flow in a popup.
    signInFlow: "popup",
    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID,, {
      provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID,
      scopes: ["public_profile", "email" //'user_likes',
      //'user_friends'
      ]
    }, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID, {
      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,
      // Whether the display name should be displayed in Sign Up page.
      requireDisplayName: true
    }, {
      provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,
      recaptchaParameters: {
        size: MiSeguridad.getRecaptchaMode()
      },
      defaultCountry: "CO"
    }],
    tosUrl: "/1/tos/tos.html",
    privacyPolicyUrl: "/1/tos/privacidad.html"
  };
});

},{"../../common/Utiles.mjs":5,"../../common/Utilidades.mjs":6,"../common/ModuloActividad.mjs":7,"../page/ModuloPagina.mjs":14}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloIntMark = void 0;

var _Utiles = require("../../common/Utiles.mjs");

var _md = _interopRequireDefault(require("../../../node_modules/blueimp-md5-es6/js/md5.js"));

var _MiSeguridad = require("./MiSeguridad.mjs");

var _Utilidades = require("../../common/Utilidades.mjs");

var _ModuloPagina = require("../page/ModuloPagina.mjs");

var _Deferred = require("../../common/Deferred.mjs");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class ModuloIntMark {
  static computeDiferidoId() {
    return _asyncToGenerator(function* () {
      var paquete = yield ModuloIntMark.getDiferidoDb();
      console.log("diferidoDB ok");
      var db = paquete["database"];
      var ctx = paquete["ctx"];
      var principal = paquete["principal"];
      var tipoCliente = paquete["tipoCliente"];

      if (tipoCliente == "master") {
        console.log("master..."); //Master:
        //La ruta de firebase debe quedar /pg/usrmaster/path/idpage/users

        var slaveUrl = null;
        var shortSlaveUrl = null;

        if (ctx != undefined) {
          slaveUrl = location.origin + location.pathname;

          if (typeof location.search == "string" && location.search.trim().length > 0) {
            slaveUrl += location.search.replace(/(^\?|&)(pg=\d+)($|&)/, function (a, b, c, d) {
              return b + d;
            }) + "&" + _Utilidades.Utilidades.generateQueryParams({
              pg: ctx["id"],
              sl: "si"
            });
            slaveUrl = slaveUrl.replace(/\?&/g, "?");
            slaveUrl = slaveUrl.replace(/&{2,}/g, "&");
          } else {
            slaveUrl += "?" + _Utilidades.Utilidades.generateQueryParams({
              pg: ctx["id"],
              sl: "si"
            });
          }

          var respuesta = yield fetch("/a/", {
            method: "POST",
            body: JSON.stringify({
              theurl: slaveUrl
            }),
            headers: {
              "Content-Type": "application/json"
            }
          }).then(res => res.json());
          shortSlaveUrl = location.origin + "/a/" + respuesta["id"];
        }

        if (ModuloIntMark.opciones.useFirebase) {
          var firebaseUrl = ModuloIntMark.RAIZ + "/" + principal.uid + location.pathname + "/" + ctx["id"]; //ruta dentro de firebase

          var crearMasterCtx = function crearMasterCtx() {
            var updates = {};
            updates[firebaseUrl] = {
              base: {
                time: new Date().getTime()
              }
            };
            return db.ref().update(updates);
          };

          var snapshot = yield db.ref(firebaseUrl).once("value");

          if (snapshot.val() == null) {
            yield crearMasterCtx();
          }

          return {
            slaveUrl: shortSlaveUrl,
            tipo: tipoCliente,
            db: db,
            firebaseUrl: firebaseUrl,
            masterUrl: firebaseUrl,
            ctx: ctx,
            principal: principal
          };
        } else {
          return {
            slaveUrl: shortSlaveUrl,
            tipo: tipoCliente,
            db: db,
            firebaseUrl: null,
            masterUrl: null,
            ctx: ctx,
            principal: principal
          };
        }
      } else {
        console.log("slave...");

        if (ModuloIntMark.opciones.useFirebase) {
          var nuevaLlave;
          var urlParamCtx = ModuloIntMark.RAIZ + "/" + ctx["usr"] + location.pathname.replace(/[/]$/, "") + "/" + ctx["id"];

          if (ModuloIntMark.opciones.slaveIdUsr) {
            nuevaLlave = principal.uid;
          } else {
            nuevaLlave = ModuloIntMark.darIdAnonimo();

            if (nuevaLlave == null) {
              nuevaLlave = db.ref().child(urlParamCtx + "/usr").push().key;
              ModuloIntMark.asignarIdAnonimo(nuevaLlave);
            }
          }

          var _firebaseUrl = urlParamCtx + "/usr/" + nuevaLlave;

          var crearSlaveCtx = function crearSlaveCtx() {
            var updates = {};
            updates[_firebaseUrl] = {
              time: new Date().getTime()
            };
            return db.ref().update(updates);
          };

          var _snapshot = yield db.ref(_firebaseUrl).once("value");

          if (_snapshot.val() == null) {
            yield crearSlaveCtx();
          }

          return {
            id: nuevaLlave,
            tipo: tipoCliente,
            db: db,
            firebaseUrl: _firebaseUrl,
            masterUrl: urlParamCtx,
            ctx: ctx,
            principal: principal
          };
        } else {
          return {
            id: null,
            tipo: tipoCliente,
            db: db,
            firebaseUrl: null,
            masterUrl: null,
            ctx: ctx,
            principal: principal
          };
        }
      }
    })();
  }

  static computeDiferidoDb() {
    return _asyncToGenerator(function* () {
      yield _MiSeguridad.MiSeguridad.inicializar();

      var urlParam = _Utilidades.Utilidades.getQueryParams(location.href);

      var unknownPage = [null, "", undefined].indexOf(urlParam["pg"]) >= 0;
      var isSlave = urlParam["sl"] == "si";
      var isMaster = !isSlave;
      var forzarUsuario = (isMaster || unknownPage) && ModuloIntMark.opciones["masterLoged"] || (isSlave || unknownPage) && ModuloIntMark.opciones["slaveLoged"];
      var principal = yield _MiSeguridad.MiSeguridad.buscarUsuario(forzarUsuario);
      var contextoPagina = yield _ModuloPagina.ModuloPagina.leer(ModuloIntMark.opciones.sincronizar);
      var lecturaBasica = contextoPagina.valor;
      var hayUsuario = [null, undefined].indexOf(principal) < 0;
      var usuarioEsDuenio = hayUsuario && lecturaBasica["usr"] == principal["uid"]; //es slave si lo solicita o si no es el duenio de la pagina

      var tipoCliente = isSlave || hayUsuario && !usuarioEsDuenio ? "slave" : "master";
      var database = null;

      if (ModuloIntMark.opciones.useFirebase) {
        database = firebase.database();
      }

      return {
        database: database,
        //Esto lo deberíamos sacar de acá
        principal: principal,
        ctx: lecturaBasica,
        tipoCliente: tipoCliente
      };
    })();
  }
  /**
   * Retorna la promesa de la base de datos
   * @param opcionesUsr
   */


  static getDiferidoDb() {
    var opcionesUsr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (!ModuloIntMark.diferidoDbDone) {
      ModuloIntMark.diferidoDbDone = true;
      Object.assign(ModuloIntMark.opciones, opcionesUsr);
      ModuloIntMark.computeDiferidoDb().then(function (datos) {
        ModuloIntMark.diferidoDb.resolve(datos);
      }, function (error) {
        ModuloIntMark.diferidoDb.reject(error);
      });
    }

    return ModuloIntMark.diferidoDb.promise;
  }

  static getDiferidoId() {
    var opcionesUsr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (!ModuloIntMark.diferidoIdDone) {
      ModuloIntMark.diferidoIdDone = true;
      Object.assign(ModuloIntMark.opciones, opcionesUsr);
      ModuloIntMark.computeDiferidoId().then(function (datos) {
        ModuloIntMark.diferidoId.resolve(datos);
      }, function (error) {
        ModuloIntMark.diferidoId.reject(error);
      });
    }

    return ModuloIntMark.diferidoId.promise;
  }

  static getDiferidoIntMark() {
    var opcionesUsr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return ModuloIntMark.getDiferidoId(opcionesUsr);
  }

  static darIdAnonimo() {
    var temp = localStorage[ModuloIntMark.LLAVE_LOCAL_STORAGE];

    if (temp === undefined) {
      return null;
    }

    return temp;
  }

  static asignarIdAnonimo(id) {
    localStorage[ModuloIntMark.LLAVE_LOCAL_STORAGE] = id;
  }

  static afterSlave() {
    return new Promise(resolve => {
      ModuloIntMark.diferidoId.promise.then(function (datos) {
        if (datos.tipo == "slave") {
          resolve(datos);
        }
      });
    });
  }

  static afterMaster() {
    return new Promise(resolve => {
      ModuloIntMark.diferidoId.promise.then(function (datos) {
        if (datos.tipo == "master") {
          resolve(datos);
        }
      });
    });
  }

  static afterAny() {
    return new Promise(resolve => {
      ModuloIntMark.diferidoId.promise.then(function (datos) {
        resolve(datos);
      });
    });
  }

}

exports.ModuloIntMark = ModuloIntMark;

_defineProperty(ModuloIntMark, "RAIZ", "/pgs");

_defineProperty(ModuloIntMark, "diferidoId", new _Deferred.Deferred());

_defineProperty(ModuloIntMark, "diferidoIdDone", false);

_defineProperty(ModuloIntMark, "diferidoDb", new _Deferred.Deferred());

_defineProperty(ModuloIntMark, "diferidoDbDone", false);

_defineProperty(ModuloIntMark, "LLAVE_LOCAL_STORAGE", (0, _md.default)(_Utiles.Utiles.getReferer()));

_defineProperty(ModuloIntMark, "opciones", {
  masterLoged: true,
  slaveLoged: false,
  masterIdUsr: false,
  slaveIdUsr: false,
  //Usar el user uid para crear la entrada en la base de datos firebase
  useFirebase: false
});

},{"../../../node_modules/blueimp-md5-es6/js/md5.js":15,"../../common/Deferred.mjs":4,"../../common/Utiles.mjs":5,"../../common/Utilidades.mjs":6,"../page/ModuloPagina.mjs":14,"./MiSeguridad.mjs":10}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloQR = void 0;

var _ModuloIntMark = require("./ModuloIntMark.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

class ModuloQR {
  static showQR() {
    return _asyncToGenerator(function* () {
      var datos = yield _ModuloIntMark.ModuloIntMark.getDiferidoIntMark();
      console.log("diferidoId ok");
      var divSlave = $("#imslave");
      var divMaster = $("#immaster");

      if (typeof datos.slaveUrl != "string") {
        return;
      }

      if (datos.tipo == "master") {
        divSlave.remove();
        var elemQrCode = $("#qrcode");

        if (elemQrCode.length > 0) {
          var veces = 3;
          elemQrCode.qrcode({
            width: 41 * veces,
            height: 41 * veces,
            text: datos.slaveUrl
          });
          elemQrCode.on("click", function () {
            window.open(datos.slaveUrl, "_blank");
          });
        }

        divMaster.removeClass("invisible");
      } else {
        divMaster.remove();
        divSlave.removeClass("invisible");
      }
    })();
  }

}

exports.ModuloQR = ModuloQR;

},{"./ModuloIntMark.mjs":11}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SecurityInterceptor = void 0;

var _Utiles = require("../../common/Utiles.mjs");

var _MiSeguridad = require("./MiSeguridad.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var originalFetch = window.fetch;

class SecurityInterceptor {
  static initialize() {
    if (SecurityInterceptor.initialized) {
      return;
    }

    window.fetch = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return function () {
        var _ref = _asyncToGenerator(function* (args) {
          var listaLocal = SecurityInterceptor.list;

          for (var i = 0; i < listaLocal.length; i++) {
            args = yield listaLocal[i].request(...args);
          }

          var result = yield originalFetch(...args);
          return result;
        });

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }()(args);
    };

    SecurityInterceptor.initialized = true;
  }

  static register() {
    SecurityInterceptor.initialize();
    SecurityInterceptor.registerReferer();
    SecurityInterceptor.registerAuthToken();
  }

  static unregister() {
    while (SecurityInterceptor.list.length > 0) {
      var funcion = SecurityInterceptor.list.splice(0, 1);
      funcion();
    }
  }

  static registerAuthToken() {
    SecurityInterceptor.list.push({
      request: function () {
        var _request = _asyncToGenerator(function* (url, config) {
          if ([null, undefined].indexOf(config.headers) >= 0) {
            config.headers = {};
          }

          var accessToken = null;

          try {
            accessToken = yield _MiSeguridad.MiSeguridad.darToken();
          } catch (e) {}

          if (accessToken != null) {
            config.headers["Authorization"] = "Bearer " + accessToken;
          }

          return [url, config];
        });

        function request(_x2, _x3) {
          return _request.apply(this, arguments);
        }

        return request;
      }()
    });
  }

  static registerReferer() {
    SecurityInterceptor.list.push({
      request: function () {
        var _request2 = _asyncToGenerator(function* (url, config) {
          if ([null, undefined].indexOf(config.headers) >= 0) {
            config.headers = {};
          }

          config.referrer = _Utiles.Utiles.getReferer();
          config.headers["HTTP_REFERER"] = _Utiles.Utiles.getReferer();
          return [url, config];
        });

        function request(_x4, _x5) {
          return _request2.apply(this, arguments);
        }

        return request;
      }()
    });
  }

}

exports.SecurityInterceptor = SecurityInterceptor;

_defineProperty(SecurityInterceptor, "list", []);

_defineProperty(SecurityInterceptor, "initialized", false);

},{"../../common/Utiles.mjs":5,"./MiSeguridad.mjs":10}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModuloPagina = void 0;

var _MiSeguridad = require("../firebase/MiSeguridad.mjs");

var _SecurityInterceptor = require("../firebase/SecurityInterceptor.mjs");

var _Utilidades = require("../../common/Utilidades.mjs");

var _Deferred = require("../../common/Deferred.mjs");

var _ModuloHtml = require("../common/ModuloHtml.mjs");

var _ModuloModales = require("../common/ModuloModales.mjs");

var _ModuloActividad = require("../common/ModuloActividad.mjs");

var _Utiles = require("../../common/Utiles.mjs");

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

_SecurityInterceptor.SecurityInterceptor.register();

class ModuloPagina {
  static getCurrentPageValues() {
    return {
      tit: $('[name="og:title"]').attr("content"),
      desc: $('[name="og:description"]').attr("content"),
      img: $('[name="og:image"]').attr("content"),
      kw: $('[name="keywords"]').attr("content")
    };
  }

  static setCurrentValues(values) {
    $("title").text(values.tit);
    $('[name="og:title"]').attr("content", values.tit);
    $('[name="og:description"]').attr("content", values.desc);
    $('[name="og:image"]').attr("content", values.img);
    $('[name="keywords"]').attr("content", values.kw);
  }

  static leerInterno() {
    var _arguments = arguments;
    return _asyncToGenerator(function* () {
      var opcionesUsr = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};
      var opciones = {
        logged: false
      };
      Object.assign(opciones, ModuloPagina.getCurrentPageValues());
      Object.assign(opciones, opcionesUsr);
      yield _MiSeguridad.MiSeguridad.buscarUsuario(opciones["logged"]);

      var params = _Utilidades.Utilidades.getQueryParams();

      var queryParams = {
        pg: params.pg,
        tit: opciones.tit,
        desc: opciones.desc,
        img: opciones.img,
        kw: opciones.kw
      };
      var url = new URL("".concat(location.origin, "/api/xpage/"));
      url.search = _Utilidades.Utilidades.generateQueryParams(queryParams);
      var rta = yield fetch(url, {
        method: "GET"
      }).then(res => res.json());
      ModuloPagina.setCurrentValues(rta.valor);
      return rta;
    })();
  }

  static leer() {
    var _arguments2 = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};

      if (!ModuloPagina.diferidoLecturaDone) {
        ModuloPagina.diferidoLecturaDone = true;
        var rta = yield ModuloPagina.leerInterno(opciones);
        ModuloPagina.diferidoLectura.resolve(rta);
      }

      return ModuloPagina.diferidoLectura.promise;
    })();
  }

  static guardar(modelo) {
    return _asyncToGenerator(function* () {
      var url = new URL("".concat(location.origin, "/api/xpage/"));
      url.search = _Utilidades.Utilidades.generateQueryParams({
        pg: modelo.id
      });
      yield fetch(url, {
        method: "PUT",
        body: JSON.stringify(modelo),
        headers: {
          "Content-Type": "application/json"
        }
      }).then(res => res.json());
    })();
  }

  static leerTodo(sincronizar) {
    return _asyncToGenerator(function* () {
      var promesaLeer = ModuloPagina.leer();
      var promesaLeer2 = ModuloPagina.leer2(sincronizar);
      var partes = yield Promise.all([promesaLeer, promesaLeer2]);
      return partes;
    })();
  }

  static editPage() {
    var _arguments3 = arguments;
    return _asyncToGenerator(function* () {
      var opciones = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {};
      opciones = Object.assign({}, opciones);
      var readPagePromise = ModuloPagina.leer();
      var urlTemplate = "/js/front/page/html/editPageProperties.html";
      return new Promise( /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(function* (resolve) {
          var scope = {
            $ctrl: {
              page: {
                page: (yield readPagePromise).valor
              }
            }
          };
          yield _ModuloModales.ModuloModales.basic({
            message: yield _ModuloHtml.ModuloHtml.getHtml(urlTemplate),
            size: "lg",
            useHtml: true,
            beforeShow: function () {
              var _beforeShow = _asyncToGenerator(function* (element) {
                //Se valida la lista de permisos
                var page = scope.$ctrl.page.page;
                page.pr = _Utiles.Utiles.list2Text(page.pr);
                page.kw = _Utiles.Utiles.list2Text(page.kw);

                _ModuloHtml.ModuloHtml.modelToHtml(scope, element);
              });

              function beforeShow(_x2) {
                return _beforeShow.apply(this, arguments);
              }

              return beforeShow;
            }(),
            buttons: [{
              text: "Cancelar",
              class: "btn btn-secondary",
              action: function () {
                var _action = _asyncToGenerator(function* (close) {
                  resolve(false);
                  close();
                });

                function action(_x3) {
                  return _action.apply(this, arguments);
                }

                return action;
              }()
            }, {
              text: "Guardar",
              class: "btn btn-primary",
              action: function () {
                var _action2 = _asyncToGenerator(function* (close, element) {
                  var actividad = _ModuloActividad.ModuloActividad.on();

                  try {
                    var newScope = _ModuloHtml.ModuloHtml.htmlToModel(element);

                    var page = newScope.$ctrl.page.page;
                    page.pr = _Utiles.Utiles.text2List(page.pr);
                    page.kw = _Utiles.Utiles.text2List(page.kw);
                    $.extend(true, scope, newScope);
                    yield ModuloPagina.guardar(scope.$ctrl.page.page);
                    ModuloPagina.setCurrentValues(scope.$ctrl.page.page);
                    resolve(true);
                    close();
                    actividad.resolve();
                  } catch (err) {
                    _ModuloModales.ModuloModales.alert({
                      message: err
                    });

                    actividad.resolve();
                  }
                });

                function action(_x4, _x5) {
                  return _action2.apply(this, arguments);
                }

                return action;
              }()
            }]
          });
        });

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
    })();
  }

}

exports.ModuloPagina = ModuloPagina;

_defineProperty(ModuloPagina, "diferidoLectura", new _Deferred.Deferred());

_defineProperty(ModuloPagina, "diferidoLecturaDone", false);

},{"../../common/Deferred.mjs":4,"../../common/Utiles.mjs":5,"../../common/Utilidades.mjs":6,"../common/ModuloActividad.mjs":7,"../common/ModuloHtml.mjs":8,"../common/ModuloModales.mjs":9,"../firebase/MiSeguridad.mjs":10,"../firebase/SecurityInterceptor.mjs":13}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
var safeAdd = (x, y) => {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  return (x >> 16) + (y >> 16) + (lsw >> 16) << 16 | lsw & 0xFFFF;
};
/*
 * Bitwise rotate a 32-bit number to the left.
 */


var bitRotateLeft = (num, cnt) => num << cnt | num >>> 32 - cnt;
/*
 * These functions implement the four basic operations the algorithm uses.
 */


var md5cmn = (q, a, b, x, s, t) => safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b),
    md5ff = (a, b, c, d, x, s, t) => md5cmn(b & c | ~b & d, a, b, x, s, t),
    md5gg = (a, b, c, d, x, s, t) => md5cmn(b & d | c & ~d, a, b, x, s, t),
    md5hh = (a, b, c, d, x, s, t) => md5cmn(b ^ c ^ d, a, b, x, s, t),
    md5ii = (a, b, c, d, x, s, t) => md5cmn(c ^ (b | ~d), a, b, x, s, t);

var firstChunk = (chunks, x, i) => {
  var [a, b, c, d] = chunks;
  a = md5ff(a, b, c, d, x[i + 0], 7, -680876936);
  d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
  c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
  b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
  a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
  d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
  c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
  b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
  a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
  d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
  c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
  b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
  a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
  d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
  c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
  b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
  return [a, b, c, d];
},
    secondChunk = (chunks, x, i) => {
  var [a, b, c, d] = chunks;
  a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
  d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
  c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
  b = md5gg(b, c, d, a, x[i], 20, -373897302);
  a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
  d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
  c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
  b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
  a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
  d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
  c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
  b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
  a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
  d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
  c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
  b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
  return [a, b, c, d];
},
    thirdChunk = (chunks, x, i) => {
  var [a, b, c, d] = chunks;
  a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
  d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
  c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
  b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
  a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
  d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
  c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
  b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
  a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
  d = md5hh(d, a, b, c, x[i], 11, -358537222);
  c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
  b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
  a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
  d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
  c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
  b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
  return [a, b, c, d];
},
    fourthChunk = (chunks, x, i) => {
  var [a, b, c, d] = chunks;
  a = md5ii(a, b, c, d, x[i], 6, -198630844);
  d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
  c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
  b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
  a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
  d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
  c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
  b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
  a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
  d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
  c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
  b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
  a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
  d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
  c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
  b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
  return [a, b, c, d];
};
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


var binlMD5 = (x, len) => {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[(len + 64 >>> 9 << 4) + 14] = len;
  var commands = [firstChunk, secondChunk, thirdChunk, fourthChunk],
      initialChunks = [1732584193, -271733879, -1732584194, 271733878];
  return Array.from({
    length: Math.floor(x.length / 16) + 1
  }, (v, i) => i * 16).reduce((chunks, i) => commands.reduce((newChunks, apply) => apply(newChunks, x, i), chunks.slice()).map((chunk, index) => safeAdd(chunk, chunks[index])), initialChunks);
};
/*
 * Convert an array of little-endian words to a string
 */


var binl2rstr = input => Array(input.length * 4).fill(8).reduce((output, k, i) => output + String.fromCharCode(input[i * k >> 5] >>> i * k % 32 & 0xFF), '');
/*
 * Convert a raw string to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


var rstr2binl = input => Array.from(input).map(i => i.charCodeAt(0)).reduce((output, cc, i) => {
  var resp = output.slice();
  resp[i * 8 >> 5] |= (cc & 0xFF) << i * 8 % 32;
  return resp;
}, []);
/*
 * Calculate the MD5 of a raw string
 */


var rstrMD5 = string => binl2rstr(binlMD5(rstr2binl(string), string.length * 8));
/*
 * Calculate the HMAC-MD5, of a key and some data (raw strings)
 */


var strHMACMD5 = (key, data) => {
  var bkey = rstr2binl(key),
      ipad = Array(16).fill(undefined ^ 0x36363636),
      opad = Array(16).fill(undefined ^ 0x5C5C5C5C);

  if (bkey.length > 16) {
    bkey = binlMD5(bkey, key.length * 8);
  }

  bkey.forEach((k, i) => {
    ipad[i] = k ^ 0x36363636;
    opad[i] = k ^ 0x5C5C5C5C;
  });
  return binl2rstr(binlMD5(opad.concat(binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)), 512 + 128));
};
/*
 * Convert a raw string to a hex string
 */


var rstr2hex = input => {
  var hexTab = pos => '0123456789abcdef'.charAt(pos);

  return Array.from(input).map(c => c.charCodeAt(0)).reduce((output, x, i) => output + hexTab(x >>> 4 & 0x0F) + hexTab(x & 0x0F), '');
};
/*
 * Encode a string as utf-8
 */


var str2rstrUTF8 = unicodeString => {
  if (typeof unicodeString !== 'string') throw new TypeError('parameter ‘unicodeString’ is not a string');

  var cc = c => c.charCodeAt(0);

  return unicodeString.replace(/[\u0080-\u07ff]/g, // U+0080 - U+07FF => 2 bytes 110yyyyy, 10zzzzzz
  c => String.fromCharCode(0xc0 | cc(c) >> 6, 0x80 | cc(c) & 0x3f)).replace(/[\u0800-\uffff]/g, // U+0800 - U+FFFF => 3 bytes 1110xxxx, 10yyyyyy, 10zzzzzz
  c => String.fromCharCode(0xe0 | cc(c) >> 12, 0x80 | cc(c) >> 6 & 0x3F, 0x80 | cc(c) & 0x3f));
};
/*
 * Take string arguments and return either raw or hex encoded strings
 */


var rawMD5 = s => rstrMD5(str2rstrUTF8(s));

var hexMD5 = s => rstr2hex(rawMD5(s));

var rawHMACMD5 = (k, d) => strHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));

var hexHMACMD5 = (k, d) => rstr2hex(rawHMACMD5(k, d));

var _default = (string, key, raw) => {
  if (!key) {
    if (!raw) {
      return hexMD5(string);
    }

    return rawMD5(string);
  }

  if (!raw) {
    return hexHMACMD5(key, string);
  }

  return rawHMACMD5(key, string);
};

exports.default = _default;

},{}]},{},[2]);
