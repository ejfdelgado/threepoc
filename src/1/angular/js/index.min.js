(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppModule = void 0;

var _CalendarModule = require("../../../node_local/front/angular/modules/CalendarModule.mjs");

var _IdGen = require("../../../node_local/common/IdGen.mjs");

var AppModule = angular.module("app", [_CalendarModule.CalendarModule, "ui.router"]).name;
exports.AppModule = AppModule;

_IdGen.IdGen.ahora().then(fecha => {
  console.log(fecha);
});

},{"../../../node_local/common/IdGen.mjs":2,"../../../node_local/front/angular/modules/CalendarModule.mjs":4}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IdGen = void 0;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class IdGen {
  //Retorna un diferido con la fecha
  static ahora() {
    return _asyncToGenerator(function* () {
      return new Promise(resolve => {
        var sincronizar = function sincronizar() {
          diferidoInvocacion = new Promise(resolveInterno => {
            var URL_GET_DATE = "/api/tup/fecha";
            $.ajax({
              url: URL_GET_DATE,
              data: null,
              success: function success(rta) {
                var temp = rta.unixtime;
                diferenciaFechaServidor = new Date().getTime() - temp;
                resolve(temp);
                resolveInterno();
              },
              dataType: "json"
            });
          });
        };

        var usarDiferencia = function usarDiferencia() {
          var temp = new Date().getTime();
          resolve(temp - diferenciaFechaServidor);
        };

        if (diferenciaFechaServidor == null) {
          if (diferidoInvocacion == null) {
            sincronizar();
          } else {
            diferidoInvocacion.then(function () {
              //Ya se puede usar la diferencia
              usarDiferencia();
            });
          }
        } else {
          usarDiferencia();
        }
      });
    })();
  }

  static edad(birthday) {
    return _asyncToGenerator(function* () {
      // birthday is a date
      var fecha = yield ahora();
      var ageDifMs = fecha - birthday.getTime();
      var ageDate = new Date(ageDifMs); // miliseconds from epoch

      var ans = Math.abs(ageDate.getUTCFullYear() - 1970);
      return ans;
    })();
  }

  static darInicioDia(epoch) {
    var start = new Date(epoch);
    start.setHours(0, 0, 0, 0);
    return start.getTime();
  }

  static darFinDia(epoch) {
    var end = new Date(epoch);
    end.setHours(23, 59, 59, 999);
    return end.getTime();
  }

  static darInicioMes(epoch) {
    var start = new Date(epoch);
    var firstDay = new Date(start.getFullYear(), start.getMonth(), 1);
    return firstDay.getTime();
  }

  static darFinMes(epoch) {
    var start = new Date(epoch);
    var lastDay = new Date(start.getFullYear(), start.getMonth() + 1, 0);
    lastDay.setHours(23, 59, 59, 999);
    return lastDay.getTime();
  } //Solo año/mes/día


  static epoch2Text(tiempo) {
    if (typeof tiempo == "number") {
      var fecha = new Date(tiempo);
      return fecha.getFullYear() + "/" + (fecha.getMonth() + 1) + "/" + fecha.getDate();
    } else {
      return "";
    }
  } //Año/mes/día hora:mm:ss


  static epoch2Text2(tiempo) {
    if (typeof tiempo == "number") {
      var fecha = new Date(tiempo);
      return fecha.getFullYear() + "/" + IdGen.addZero(fecha.getMonth() + 1) + "/" + IdGen.addZero(fecha.getDate()) + " " + IdGen.addZero(fecha.getHours()) + ":" + IdGen.addZero(fecha.getMinutes()) + ":" + IdGen.addZero(fecha.getSeconds());
    } else {
      return "";
    }
  }

  static addZero(i) {
    if (i < 10) {
      i = "0" + i;
    }

    return i;
  }

  static nuevo(epoch, esInicio) {
    return _asyncToGenerator(function* () {
      if (typeof epoch == "number") {
        if (typeof esInicio == "boolean") {
          if (esInicio === true) {
            epoch = IdGen.darInicioDia(epoch);
          } else {
            epoch = IdGen.darFinDia(epoch);
          }

          diferido.resolve(num2ord(epoch, esInicio));
        } else {
          diferido.resolve(num2ord(epoch));
        }
      } else {
        IdGen.ahora().then(function (fecha) {
          diferido.resolve(num2ord(fecha, esInicio));
        });
      }

      return diferido;
    })();
  }

  static nuevo() {
    var _arguments = arguments;
    return _asyncToGenerator(function* () {
      var epoch = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : null;
      var esInicio = _arguments.length > 1 ? _arguments[1] : undefined;

      if (typeof epoch == "number") {
        if (typeof esInicio == "boolean") {
          if (esInicio === true) {
            epoch = darInicioDia(epoch);
          } else {
            epoch = darFinDia(epoch);
          }

          return num2ord(epoch, esInicio);
        } else {
          return num2ord(epoch);
        }
      } else {
        var fecha = yield IdGen.ahora();
        return num2ord(fecha, esInicio);
      }
    })();
  }

  static nuevoIni() {
    var _arguments2 = arguments;
    return _asyncToGenerator(function* () {
      var epoch = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : null;
      return yield nuevo(epoch, true);
    })();
  }

  static nuevoFin(epoch) {
    return _asyncToGenerator(function* () {
      return yield nuevo(epoch, false);
    })();
  }

  static ord2num(id) {
    var temp = parseInt(id, 36);
    temp = temp / IdGen.RANDOM_SPACE_MULT;
    return temp;
  }

  static num2ord(num, esInicio) {
    if (typeof num == "number") {
      var nuevo;

      if (typeof esInicio == "boolean") {
        if (esInicio === true) {
          nuevo = num * IdGen.RANDOM_SPACE_MULT;
        } else {
          nuevo = num * IdGen.RANDOM_SPACE_MULT + (IdGen.RANDOM_SPACE_MULT - 1);
        }
      } else {
        nuevo = num * IdGen.RANDOM_SPACE_MULT + Math.floor(Math.random() * IdGen.RANDOM_SPACE_MULT);
      } //console.log(num, nuevo);


      var temp = nuevo.toString(36);
      var diff = IdGen.MAX_LENGTH_ORD_TEXT - temp.length;

      if (diff > 0) {
        temp = new Array(diff).join("0") + temp;
      } //Intencionalmente, se cambia el último aleatorio por una 'a'


      return temp.slice(0, -1) + "a";
    }

    return null;
  }

  static num2ordIni(num) {
    return num2ord(num, true);
  }

  static num2ordFin(num) {
    return num2ord(num, false);
  }

}

exports.IdGen = IdGen;

_defineProperty(IdGen, "RANDOM_SPACE", 3);

_defineProperty(IdGen, "MAX_LENGTH_ORD_TEXT", 11 + Math.ceil(IdGen.RANDOM_SPACE * 0.63));

_defineProperty(IdGen, "RANDOM_SPACE_MULT", Math.pow(10, IdGen.RANDOM_SPACE));

_defineProperty(IdGen, "diferenciaFechaServidor", null);

_defineProperty(IdGen, "diferidoInvocacion", null);

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TodoComponent = void 0;
var TodoComponent = {
  bindings: {
    todoData: "<"
  },
  templateUrl: "/node_local/front/angular/components/TodoComponent.html",
  controller: class TodoComponent {
    constructor() {
      console.log("constructor");
    }

    $onInit() {
      console.log("TodoComponent onInit");
      this.newTodo = {
        title: "",
        selected: false
      };
    }

    $onChanges(changes) {
      if (changes.todoData) {
        this.todos = Object.assign({}, this.todoData);
      }
    }

    addTodo(_ref) {
      var {
        todo
      } = _ref;
      if (!todo) return;
      this.todos.unshift(todo);
      this.newTodo = {
        title: "",
        selected: false
      };
    }

  }
};
exports.TodoComponent = TodoComponent;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CalendarModule = void 0;

var _TodoComponent = require("../components/TodoComponent.mjs");

var CalendarModule = angular.module("calendar", ["ui.router"]).component("calendarcom", _TodoComponent.TodoComponent).config(["$stateProvider", "$urlRouterProvider", ($stateProvider, $urlRouterProvider) => {
  console.log("configuring routing");
  $stateProvider.state("calendar", {
    url: "/calendar",
    component: "calendarcom"
  });
  $urlRouterProvider.otherwise("/");
  console.log("configuring routing ok!");
}]).name;
exports.CalendarModule = CalendarModule;

},{"../components/TodoComponent.mjs":3}]},{},[1]);
